`timescale 1ns / 1ps

module Registerfile(
	input clk,
	input clr,
	input RegWrite, // input e
	input [1:0] writereg,
	input [1:0] readreg1,
	input [1:0] readreg2,
	input [7:0] data,
	output [7:0] read1,
	output [7:0] read2
    );

reg [7:0] registers [3:0];
	integer i;
always@(posedge clk) begin
	if (clr) begin
	for (i = 0 ; i <= 3 ; i = i + 1)
		registers[i] <= 8'b0;
	end
	else if (RegWrite) begin
		registers[writereg] <= data;
	end
end

	assign read1 = registers[readreg1];
	assign read2 = registers[readreg2];
endmodule

